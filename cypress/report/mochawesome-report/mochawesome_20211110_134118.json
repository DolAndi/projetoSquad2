{
  "stats": {
    "suites": 3,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-10T16:41:18.028Z",
    "end": "2021-11-10T16:41:18.521Z",
    "duration": 493,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "11a9d0ca-4426-4468-9260-121bc5cdb719",
      "title": "",
      "fullFile": "cypress/integration/api_login.spec.js",
      "file": "cypress/integration/api_login.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "11151bf1-43b8-4295-a9bf-dcc83df7d6ab",
          "title": "Testes da rota /login",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "5c2a21e0-9012-4bb9-83e1-db37e1cb403a",
              "title": "Deve efetuar os testes positivos da rota",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve validar o login com status code 200 e authorization",
                  "fullTitle": "Testes da rota /login Deve efetuar os testes positivos da rota Deve validar o login com status code 200 e authorization",
                  "timedOut": null,
                  "duration": 105,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.fixture(\"loginCredentials\").then(user => {\n  cy.logar(user.valido).then(res => {\n    expect(res.status).to.equal(200);\n    expect(res.body).to.have.property(\"authorization\");\n    bearer = res.body.authorization;\n  });\n});",
                  "err": {},
                  "uuid": "cb18ff30-c77d-47c0-a662-ff78887bd4f1",
                  "parentUUID": "5c2a21e0-9012-4bb9-83e1-db37e1cb403a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve realizar teste de contrato sobre a requisição POST /login",
                  "fullTitle": "Testes da rota /login Deve efetuar os testes positivos da rota Deve realizar teste de contrato sobre a requisição POST /login",
                  "timedOut": null,
                  "duration": 82,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.fixture(\"loginCredentials\").then(user => {\n  cy.logar(user.valido).then(res => {\n    expect(res.status).to.be.equal(200);\n    cy.validarContrato(res, \"post_login\", 200).then(validacao => {\n      expect(validacao).to.be.equal(\"Contrato validado!\");\n    });\n  });\n});",
                  "err": {},
                  "uuid": "d27b8e97-4bc4-48ca-8396-9eaa8652f73d",
                  "parentUUID": "5c2a21e0-9012-4bb9-83e1-db37e1cb403a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cb18ff30-c77d-47c0-a662-ff78887bd4f1",
                "d27b8e97-4bc4-48ca-8396-9eaa8652f73d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 187,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "22e51d12-6644-436e-b0ea-bf9ad09a40be",
              "title": "Deve efetuar testes negativos da rota",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Deve efetuar uma falha em que o campo email não pode ficar em branco e status code 400",
                  "fullTitle": "Testes da rota /login Deve efetuar testes negativos da rota Deve efetuar uma falha em que o campo email não pode ficar em branco e status code 400",
                  "timedOut": null,
                  "duration": 54,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.fixture(\"loginCredentials\").then(user => {\n  cy.logar(user.emailEmBranco).then(res => {\n    expect(res.status).to.be.equal(400);\n    expect(res.body).has.property(\"email\").to.be.equal(\"email não pode ficar em branco\");\n  });\n});",
                  "err": {},
                  "uuid": "6ef638f1-5ebc-47b7-a3d2-9c9c6a42604b",
                  "parentUUID": "22e51d12-6644-436e-b0ea-bf9ad09a40be",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve efetuar uma falha em que o campo email é obrigatório e status code 400",
                  "fullTitle": "Testes da rota /login Deve efetuar testes negativos da rota Deve efetuar uma falha em que o campo email é obrigatório e status code 400",
                  "timedOut": null,
                  "duration": 47,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.fixture(\"loginCredentials\").then(user => {\n  cy.logar(user.semCampoEmail).then(res => {\n    expect(res.status).to.be.equal(400);\n    expect(res.body).has.property(\"email\").to.be.equal(\"email é obrigatório\");\n  });\n});",
                  "err": {},
                  "uuid": "2346ee30-c238-4a68-ac02-cd30c7f1680e",
                  "parentUUID": "22e51d12-6644-436e-b0ea-bf9ad09a40be",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve efetuar uma falha em que o campo senha(password) não pode ficar em branco e status code 400",
                  "fullTitle": "Testes da rota /login Deve efetuar testes negativos da rota Deve efetuar uma falha em que o campo senha(password) não pode ficar em branco e status code 400",
                  "timedOut": null,
                  "duration": 46,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.fixture(\"loginCredentials\").then(user => {\n  cy.logar(user.senhaEmBranco).then(res => {\n    expect(res.status).to.be.equal(400);\n    expect(res.body).has.property('password').to.be.equal(\"password não pode ficar em branco\");\n  });\n});",
                  "err": {},
                  "uuid": "ba03cdd9-fbca-45ba-b133-3949ec13aa03",
                  "parentUUID": "22e51d12-6644-436e-b0ea-bf9ad09a40be",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve efetuar uma falha em que o campo senha(password) é obrigatório e status code 400",
                  "fullTitle": "Testes da rota /login Deve efetuar testes negativos da rota Deve efetuar uma falha em que o campo senha(password) é obrigatório e status code 400",
                  "timedOut": null,
                  "duration": 50,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.fixture(\"loginCredentials\").then(user => {\n  cy.logar(user.semCampoSenha).then(res => {\n    expect(res.status).to.be.equal(400);\n    expect(res.body).has.property(\"password\").to.be.equal(\"password é obrigatório\");\n  });\n});",
                  "err": {},
                  "uuid": "5dd21627-87a2-4801-b119-eca686460fd4",
                  "parentUUID": "22e51d12-6644-436e-b0ea-bf9ad09a40be",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Deve efetuar falha em que os todos os campos são vazios, e status code 400",
                  "fullTitle": "Testes da rota /login Deve efetuar testes negativos da rota Deve efetuar falha em que os todos os campos são vazios, e status code 400",
                  "timedOut": null,
                  "duration": 64,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.fixture(\"loginCredentials\").then(user => {\n  cy.logar(user.semCampos).then(res => {\n    expect(res.status).to.be.equal(400);\n    expect(res.body).has.property('password').to.be.equal('password é obrigatório');\n    expect(res.body).has.property('email').to.be.equal('email é obrigatório');\n  });\n});",
                  "err": {},
                  "uuid": "f0d1d528-8d25-4135-9a83-35049a42bafe",
                  "parentUUID": "22e51d12-6644-436e-b0ea-bf9ad09a40be",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6ef638f1-5ebc-47b7-a3d2-9c9c6a42604b",
                "2346ee30-c238-4a68-ac02-cd30c7f1680e",
                "ba03cdd9-fbca-45ba-b133-3949ec13aa03",
                "5dd21627-87a2-4801-b119-eca686460fd4",
                "f0d1d528-8d25-4135-9a83-35049a42bafe"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 261,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/report/mochawesome-report",
        "overwrite": false,
        "html": false,
        "json": true,
        "timestamp": "yyyymmdd_HHMMss",
        "reportTitle": "Relatório dos testes",
        "cdn": true,
        "charts": true
      },
      "version": "6.0.1"
    }
  }
}